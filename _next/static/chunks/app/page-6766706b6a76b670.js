(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{3170:(e,t,c)=>{Promise.resolve().then(c.bind(c,7012))},7012:(e,t,c)=>{"use strict";c.r(t),c.d(t,{default:()=>h});var a=c(5155),r=c(2115);let n=()=>new Promise(e=>{let t=[];if(!("RTCPeerConnection"in window)){e([]);return}let c=new RTCPeerConnection({iceServers:[]}),a=setTimeout(()=>{c.close(),e(t)},5e3);c.createDataChannel(""),c.createOffer().then(e=>c.setLocalDescription(e)).catch(()=>clearTimeout(a)),c.onicecandidate=c=>{if(!c.candidate){clearTimeout(a),e(t);return}let r=c.candidate.candidate.match(/([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})/);r&&!t.includes(r[1])&&t.push(r[1])}}),o=e=>{let t=e.split(".").slice(0,3).join(".");return["".concat(t,".1"),"".concat(t,".100"),"".concat(t,".254"),"".concat(t,".2"),"".concat(t,".101"),"".concat(t,".50"),e]},s=e=>new Promise((t,c)=>{let a=new WebSocket("ws://".concat(e,":").concat(37521)),r=!1,n=setTimeout(()=>{r||(a.close(),c(Error("连接超时 (".concat(e,")"))))},5e3);a.onopen=()=>{r=!0,clearTimeout(n),a.send(JSON.stringify({text:"ping",type:"healthcheck"})),a.onmessage=r=>{try{let n=JSON.parse(r.data);"pong"===n.text||"received"===n.status?(a.close(),t(e)):c(Error("无效响应: ".concat(r.data)))}catch(e){c(Error("消息解析失败"))}}},a.onerror=e=>{r||(clearTimeout(n),c(Error("连接错误: ".concat(e.message))))},a.onclose=e=>{r||c(Error("连接关闭 (code ".concat(e.code,")")))}}),l=async()=>{try{let e=await n(),t=e.flatMap(e=>[...o(e),...Array.from({length:20},(t,c)=>"".concat(e.split(".")[0],".").concat(e.split(".")[1],".").concat(e.split(".")[2],".").concat(c+50))]);for(let e=0;e<t.length;e+=10){let c=t.slice(e,e+10),a=(await Promise.all(c.map(e=>s(e).catch(()=>null)))).find(e=>null!==e);if(a)return a}let c=e.flatMap(e=>Array.from({length:254},(t,c)=>"".concat(e.split(".")[0],".").concat(e.split(".")[1],".").concat(e.split(".")[2],".").concat(c+1)));for(let e=0;e<c.length;e+=10){let t=c.slice(e,e+10),a=(await Promise.all(t.map(e=>s(e).catch(()=>null)))).find(e=>null!==e);if(a)return a}throw Error("无法发现服务端")}catch(e){throw Error(e instanceof Error?e.message:"未知错误")}},i=async()=>{try{let e="".concat(window.location.protocol,"//").concat(window.location.hostname,":").concat(37520,"/backend/ip"),t=await fetch(e),c=await t.json();if(!Array.isArray(c.ips))throw Error("无效的 API 响应格式");for(let e of c.ips)try{return await s(e),e}catch(e){continue}throw Error("API 返回的 IP 均无法连接")}catch(e){throw Error(e instanceof Error?e.message:"API 发现失败")}},d=()=>{let[e,t]=(0,r.useState)("init"),[c,n]=(0,r.useState)(""),[o,s]=(0,r.useState)([]),d=(0,r.useCallback)(e=>{s(t=>[...t,"[".concat(new Date().toLocaleTimeString(),"] ").concat(e)])},[]),h=(0,r.useCallback)(async e=>{try{let t="http://".concat(e,":").concat(37520,"/backend/ip");d("尝试连接 API: ".concat(t));let c=await fetch(t);if(!c.ok)throw Error("HTTP ".concat(c.status));let a=await c.json();d("API 验证成功: ".concat(JSON.stringify(a)))}catch(t){let e=t instanceof Error?t.message:"未知错误";throw d("API 验证失败: ".concat(e)),t}},[d]),u=(0,r.useCallback)(async()=>{t("scanning"),d("启动服务端发现流程...");try{let e=await l();d("发现服务端: ".concat(e)),await h(e),n(e),t("connected"),localStorage.setItem("serverIP",e)}catch(c){let e=c instanceof Error?c.message:"未知错误";d("WebSocket 发现失败: ".concat(e));try{d("尝试 API 发现...");let e=await i();d("通过 API 发现: ".concat(e)),await h(e),n(e),t("connected"),localStorage.setItem("serverIP",e)}catch(c){let e=c instanceof Error?c.message:"未知错误";d("所有发现方式失败: ".concat(e)),t("error")}}},[d,h]);return(0,r.useEffect)(()=>{(async()=>{try{let e=localStorage.getItem("serverIP");if(e){d("检测到缓存 IP"),n(e),t("connected"),await h(e);return}await u()}catch(c){let e=c instanceof Error?c.message:"未知错误";d("初始化失败: ".concat(e)),t("error")}})()},[d,u,h]),(0,a.jsxs)("div",{className:"network-discovery",children:[(0,a.jsxs)("div",{className:"status",children:["connected"===e&&(0,a.jsxs)("div",{className:"connected",children:["✅ 已连接至: ",c,(0,a.jsx)("button",{onClick:()=>{localStorage.removeItem("serverIP"),window.location.reload()},children:"重新扫描"})]}),"scanning"===e&&(0,a.jsx)("div",{className:"scanning",children:"\uD83D\uDD04 扫描中..."}),"error"===e&&(0,a.jsxs)("div",{className:"error",children:["❗ 连接失败",(0,a.jsx)("button",{onClick:u,children:"重试"}),(0,a.jsx)("button",{onClick:()=>{let e=prompt("请输入服务端 IP:");e&&(n(e),localStorage.setItem("serverIP",e),t("connected"))},children:"手动输入"})]})]}),(0,a.jsxs)("div",{className:"debug-console",children:[(0,a.jsx)("h4",{children:"调试日志"}),(0,a.jsx)("ul",{children:o.map((e,t)=>(0,a.jsx)("li",{children:e},t))})]})]})},h=()=>(0,a.jsxs)("div",{children:[(0,a.jsx)("h1",{children:"服务端自动发现示例"}),(0,a.jsx)(d,{})]})}},e=>{var t=t=>e(e.s=t);e.O(0,[441,684,358],()=>t(3170)),_N_E=e.O()}]);